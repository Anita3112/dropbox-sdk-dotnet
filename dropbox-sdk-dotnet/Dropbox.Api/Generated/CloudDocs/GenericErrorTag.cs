// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.CloudDocs
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The generic error tag object</para>
    /// </summary>
    public class GenericErrorTag
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<GenericErrorTag> Encoder = new GenericErrorTagEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<GenericErrorTag> Decoder = new GenericErrorTagDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="GenericErrorTag" />
        /// class.</para>
        /// </summary>
        public GenericErrorTag()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is InvalidArgument</para>
        /// </summary>
        public bool IsInvalidArgument
        {
            get
            {
                return this is InvalidArgument;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a InvalidArgument, or <c>null</c>.</para>
        /// </summary>
        public InvalidArgument AsInvalidArgument
        {
            get
            {
                return this as InvalidArgument;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Unauthenticated</para>
        /// </summary>
        public bool IsUnauthenticated
        {
            get
            {
                return this is Unauthenticated;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Unauthenticated, or <c>null</c>.</para>
        /// </summary>
        public Unauthenticated AsUnauthenticated
        {
            get
            {
                return this as Unauthenticated;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is PermissionDenied</para>
        /// </summary>
        public bool IsPermissionDenied
        {
            get
            {
                return this is PermissionDenied;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a PermissionDenied, or <c>null</c>.</para>
        /// </summary>
        public PermissionDenied AsPermissionDenied
        {
            get
            {
                return this as PermissionDenied;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is DocNotFound</para>
        /// </summary>
        public bool IsDocNotFound
        {
            get
            {
                return this is DocNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a DocNotFound, or <c>null</c>.</para>
        /// </summary>
        public DocNotFound AsDocNotFound
        {
            get
            {
                return this as DocNotFound;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="GenericErrorTag" />.</para>
        /// </summary>
        private class GenericErrorTagEncoder : enc.StructEncoder<GenericErrorTag>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(GenericErrorTag value, enc.IJsonWriter writer)
            {
                if (value is InvalidArgument)
                {
                    WriteProperty(".tag", "invalid_argument", writer, enc.StringEncoder.Instance);
                    InvalidArgument.Encoder.EncodeFields((InvalidArgument)value, writer);
                    return;
                }
                if (value is Unauthenticated)
                {
                    WriteProperty(".tag", "unauthenticated", writer, enc.StringEncoder.Instance);
                    Unauthenticated.Encoder.EncodeFields((Unauthenticated)value, writer);
                    return;
                }
                if (value is PermissionDenied)
                {
                    WriteProperty(".tag", "permission_denied", writer, enc.StringEncoder.Instance);
                    PermissionDenied.Encoder.EncodeFields((PermissionDenied)value, writer);
                    return;
                }
                if (value is DocNotFound)
                {
                    WriteProperty(".tag", "doc_not_found", writer, enc.StringEncoder.Instance);
                    DocNotFound.Encoder.EncodeFields((DocNotFound)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="GenericErrorTag" />.</para>
        /// </summary>
        private class GenericErrorTagDecoder : enc.UnionDecoder<GenericErrorTag>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="GenericErrorTag" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override GenericErrorTag Create()
            {
                return new GenericErrorTag();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override GenericErrorTag Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "invalid_argument":
                        return InvalidArgument.Decoder.DecodeFields(reader);
                    case "unauthenticated":
                        return Unauthenticated.Decoder.DecodeFields(reader);
                    case "permission_denied":
                        return PermissionDenied.Decoder.DecodeFields(reader);
                    case "doc_not_found":
                        return DocNotFound.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Invalid argument supplied.</para>
        /// </summary>
        public sealed class InvalidArgument : GenericErrorTag
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<InvalidArgument> Encoder = new InvalidArgumentEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<InvalidArgument> Decoder = new InvalidArgumentDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="InvalidArgument" />
            /// class.</para>
            /// </summary>
            private InvalidArgument()
            {
            }

            /// <summary>
            /// <para>A singleton instance of InvalidArgument</para>
            /// </summary>
            public static readonly InvalidArgument Instance = new InvalidArgument();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="InvalidArgument" />.</para>
            /// </summary>
            private class InvalidArgumentEncoder : enc.StructEncoder<InvalidArgument>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(InvalidArgument value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="InvalidArgument" />.</para>
            /// </summary>
            private class InvalidArgumentDecoder : enc.StructDecoder<InvalidArgument>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="InvalidArgument" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override InvalidArgument Create()
                {
                    return InvalidArgument.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>User is unauthenticated.</para>
        /// </summary>
        public sealed class Unauthenticated : GenericErrorTag
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Unauthenticated> Encoder = new UnauthenticatedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Unauthenticated> Decoder = new UnauthenticatedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Unauthenticated" />
            /// class.</para>
            /// </summary>
            private Unauthenticated()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Unauthenticated</para>
            /// </summary>
            public static readonly Unauthenticated Instance = new Unauthenticated();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Unauthenticated" />.</para>
            /// </summary>
            private class UnauthenticatedEncoder : enc.StructEncoder<Unauthenticated>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Unauthenticated value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Unauthenticated" />.</para>
            /// </summary>
            private class UnauthenticatedDecoder : enc.StructDecoder<Unauthenticated>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Unauthenticated" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Unauthenticated Create()
                {
                    return Unauthenticated.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>User does not have access to the specified doc.</para>
        /// </summary>
        public sealed class PermissionDenied : GenericErrorTag
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<PermissionDenied> Encoder = new PermissionDeniedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<PermissionDenied> Decoder = new PermissionDeniedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="PermissionDenied" />
            /// class.</para>
            /// </summary>
            private PermissionDenied()
            {
            }

            /// <summary>
            /// <para>A singleton instance of PermissionDenied</para>
            /// </summary>
            public static readonly PermissionDenied Instance = new PermissionDenied();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="PermissionDenied" />.</para>
            /// </summary>
            private class PermissionDeniedEncoder : enc.StructEncoder<PermissionDenied>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(PermissionDenied value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="PermissionDenied" />.</para>
            /// </summary>
            private class PermissionDeniedDecoder : enc.StructDecoder<PermissionDenied>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="PermissionDenied" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override PermissionDenied Create()
                {
                    return PermissionDenied.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Doc could not be found based on the supplied doc ID.</para>
        /// </summary>
        public sealed class DocNotFound : GenericErrorTag
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<DocNotFound> Encoder = new DocNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<DocNotFound> Decoder = new DocNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="DocNotFound" />
            /// class.</para>
            /// </summary>
            private DocNotFound()
            {
            }

            /// <summary>
            /// <para>A singleton instance of DocNotFound</para>
            /// </summary>
            public static readonly DocNotFound Instance = new DocNotFound();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="DocNotFound" />.</para>
            /// </summary>
            private class DocNotFoundEncoder : enc.StructEncoder<DocNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(DocNotFound value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="DocNotFound" />.</para>
            /// </summary>
            private class DocNotFoundDecoder : enc.StructDecoder<DocNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="DocNotFound" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override DocNotFound Create()
                {
                    return DocNotFound.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : GenericErrorTag
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
