// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.CloudDocs
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The content purpose object</para>
    /// </summary>
    public class ContentPurpose
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<ContentPurpose> Encoder = new ContentPurposeEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<ContentPurpose> Decoder = new ContentPurposeDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ContentPurpose" /> class.</para>
        /// </summary>
        public ContentPurpose()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Search</para>
        /// </summary>
        public bool IsSearch
        {
            get
            {
                return this is Search;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Search, or <c>null</c>.</para>
        /// </summary>
        public Search AsSearch
        {
            get
            {
                return this as Search;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Preview</para>
        /// </summary>
        public bool IsPreview
        {
            get
            {
                return this is Preview;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Preview, or <c>null</c>.</para>
        /// </summary>
        public Preview AsPreview
        {
            get
            {
                return this as Preview;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="ContentPurpose" />.</para>
        /// </summary>
        private class ContentPurposeEncoder : enc.StructEncoder<ContentPurpose>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(ContentPurpose value, enc.IJsonWriter writer)
            {
                if (value is Search)
                {
                    WriteProperty(".tag", "search", writer, enc.StringEncoder.Instance);
                    Search.Encoder.EncodeFields((Search)value, writer);
                    return;
                }
                if (value is Preview)
                {
                    WriteProperty(".tag", "preview", writer, enc.StringEncoder.Instance);
                    Preview.Encoder.EncodeFields((Preview)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="ContentPurpose" />.</para>
        /// </summary>
        private class ContentPurposeDecoder : enc.UnionDecoder<ContentPurpose>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="ContentPurpose" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override ContentPurpose Create()
            {
                return new ContentPurpose();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override ContentPurpose Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "search":
                        return Search.Decoder.DecodeFields(reader);
                    case "preview":
                        return Preview.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The search object</para>
        /// </summary>
        public sealed class Search : ContentPurpose
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Search> Encoder = new SearchEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Search> Decoder = new SearchDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Search" /> class.</para>
            /// </summary>
            private Search()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Search</para>
            /// </summary>
            public static readonly Search Instance = new Search();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Search" />.</para>
            /// </summary>
            private class SearchEncoder : enc.StructEncoder<Search>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Search value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Search" />.</para>
            /// </summary>
            private class SearchDecoder : enc.StructDecoder<Search>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Search" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Search Create()
                {
                    return Search.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The preview object</para>
        /// </summary>
        public sealed class Preview : ContentPurpose
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Preview> Encoder = new PreviewEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Preview> Decoder = new PreviewDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Preview" /> class.</para>
            /// </summary>
            private Preview()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Preview</para>
            /// </summary>
            public static readonly Preview Instance = new Preview();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Preview" />.</para>
            /// </summary>
            private class PreviewEncoder : enc.StructEncoder<Preview>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Preview value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Preview" />.</para>
            /// </summary>
            private class PreviewDecoder : enc.StructDecoder<Preview>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Preview" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Preview Create()
                {
                    return Preview.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : ContentPurpose
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
