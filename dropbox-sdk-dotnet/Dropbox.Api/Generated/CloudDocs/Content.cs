// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.CloudDocs
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The content object</para>
    /// </summary>
    public class Content
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<Content> Encoder = new ContentEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<Content> Decoder = new ContentDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="Content" /> class.</para>
        /// </summary>
        /// <param name="purpose">The purpose</param>
        /// <param name="contentKey">The key returned from an upload_additional_content
        /// response.</param>
        public Content(ContentPurpose purpose,
                       string contentKey)
        {
            if (purpose == null)
            {
                throw new sys.ArgumentNullException("purpose");
            }

            if (contentKey == null)
            {
                throw new sys.ArgumentNullException("contentKey");
            }

            this.Purpose = purpose;
            this.ContentKey = contentKey;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="Content" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public Content()
        {
        }

        /// <summary>
        /// <para>Gets the purpose of the content</para>
        /// </summary>
        public ContentPurpose Purpose { get; protected set; }

        /// <summary>
        /// <para>The key returned from an upload_additional_content response.</para>
        /// </summary>
        public string ContentKey { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="Content" />.</para>
        /// </summary>
        private class ContentEncoder : enc.StructEncoder<Content>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(Content value, enc.IJsonWriter writer)
            {
                WriteProperty("purpose", value.Purpose, writer, global::Dropbox.Api.CloudDocs.ContentPurpose.Encoder);
                WriteProperty("content_key", value.ContentKey, writer, enc.StringEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="Content" />.</para>
        /// </summary>
        private class ContentDecoder : enc.StructDecoder<Content>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="Content" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override Content Create()
            {
                return new Content();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(Content value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "purpose":
                        value.Purpose = global::Dropbox.Api.CloudDocs.ContentPurpose.Decoder.Decode(reader);
                        break;
                    case "content_key":
                        value.ContentKey = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
